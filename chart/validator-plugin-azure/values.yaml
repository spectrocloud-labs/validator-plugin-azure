controllerManager:
  kubeRbacProxy:
    args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:8080/
    - --logtostderr=true
    - --v=0
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.15.0
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
  manager:
    args:
    - --health-probe-bind-address=:8081
    - --leader-elect
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: quay.io/spectrocloud-labs/validator-plugin-azure
      tag: v0.0.1  # x-release-please-version
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
  replicas: 1
  serviceAccount:
    annotations: {}
kubernetesClusterDomain: cluster.local
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  type: ClusterIP
auth:
  # The name of the secret to look for the config in. Or, the name of the
  # secret to be created and for the credentials to be provided to if a secret
  # does not yet exist and createSecret is not overriden to false.
  secretName: azure-creds
  # Allows the plugin to automatically create the secret containing the
  # credentials if it does not yet exist.
  createSecret: true
  # The tenant ID for the application in Microsoft Entra.
  tenantId: ""
  # The client ID associated with the tenant. Also known as application ID.
  clientId: ""
  # The client secret associated with the tenant.
  clientSecret: ""
# The subscription ID for a subscription.
# TODO: Azure has a concept of a single service principal managing resources in
#       subscriptions. Therefore, we need to determine whether this config
#       should be for the service principal used as the "power user" or for the
#       subscription the user intends to use with resources that will form
#       their k8s cluster or AKS cluster created via Palette. We may end up
#       allowing more than one subscription to be configured here.
subscriptionId: ""
