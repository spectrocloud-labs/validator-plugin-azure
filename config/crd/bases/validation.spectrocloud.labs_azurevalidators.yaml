---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: azurevalidators.validation.spectrocloud.labs
spec:
  group: validation.spectrocloud.labs
  names:
    kind: AzureValidator
    listKind: AzureValidatorList
    plural: azurevalidators
    singular: azurevalidator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureValidator is the Schema for the azurevalidators API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureValidatorSpec defines the desired state of AzureValidator
            properties:
              rbacRules:
                description: Rules for validating that the correct role assignments
                  have been created in Azure RBAC to provide needed permissions.
                items:
                  description: Conveys that a specified security principal (aka principal)
                    should have the specified permissions, via roles.
                  properties:
                    permissionSets:
                      description: The permissions that the principal must have. If
                        the principal has permissions less than this, validation will
                        fail. If the principal has permissions equal to or more than
                        this (e.g., inherited permissions from higher level scope,
                        more roles than needed) validation will pass.
                      items:
                        description: Conveys that the security principal should be
                          the member of a role assignment that provides the specified
                          role for the specified scope. Scope can be either subscription,
                          resource group, or resource.
                        properties:
                          actions:
                            description: If provided, the actions that the role must
                              be able to perform. Must not contain any wildcards.
                              If not specified, the role is assumed to already be
                              able to perform all required actions.
                            items:
                              type: string
                            minItems: 1
                            type: array
                          dataActions:
                            description: If provided, the data actions that the role
                              must be able to perform. Must not contain any wildcards.
                              If not provided, the role is assumed to already be able
                              to perform all required data actions.
                            items:
                              type: string
                            minItems: 1
                            type: array
                          role:
                            description: The role name. Note that this is the name
                              of the role, which looks like an ID, not the role name
                              of the role, which looks like a descriptive name. If
                              this is a custom role and actions or data actions are
                              also specified, so that permissions are validated too,
                              the custom role must only contain actions and/or data
                              actions that contain no wildcards or one wildcard, not
                              multiple wildcards.
                            type: string
                          scope:
                            description: The minimum scope of the role. Role assignments
                              found at higher level scopes will satisfy this. For
                              example, a role assignment found with subscription scope
                              will satisfy a permission set where the role scope specified
                              is a resource group within that subscrption.
                            type: string
                        required:
                        - role
                        - scope
                        type: object
                      minItems: 1
                      type: array
                    principalId:
                      description: The principal being validated. This can be any
                        type of principal - Device, ForeignGroup, Group, ServicePrincipal,
                        or User.
                      type: string
                  required:
                  - permissionSets
                  - principalId
                  type: object
                type: array
            required:
            - rbacRules
            type: object
          status:
            description: AzureValidatorStatus defines the observed state of AzureValidator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
